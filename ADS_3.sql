CREATE DATABASE ADS_3;

-- SEXO = {COD_SEXO, NOME_SEXO}

CREATE TABLE SEXO(
	COD_SEXO SERIAL PRIMARY KEY,
	NOME_SEXO VARCHAR(9) NOT NULL UNIQUE
);

-- CONSULTA SIMPLES

SELECT * FROM SEXO;

-- INSERINDO INFORMAÇÕES NA TABELA SEXO

INSERT INTO SEXO (NOME_SEXO) VALUES ('FEMININO');
INSERT INTO SEXO (NOME_SEXO) VALUES ('MASCULINO');

-- CURSO = {COD_CURSO, NOME_CURSO}

CREATE TABLE CURSO(
	COD_CURSO SERIAL PRIMARY KEY,
	NOME_CURSO VARCHAR(80) NOT NULL UNIQUE
);

INSERT INTO CURSO(NOME_CURSO) VALUES ('ADS');
INSERT INTO CURSO(NOME_CURSO) VALUES ('ENFERMAGEM');

SELECT * FROM CURSO;

-- ALUNO = {COD_ALUNO, NOME_ALUNO, COD_SEXO_FK, COD_CURSO_FK, APELIDO}

CREATE TABLE ALUNO(
COD_ALUNO SERIAL PRIMARY KEY,
NOME_ALUNO VARCHAR(80) NOT NULL,

COD_SEXO_FK INTEGER REFERENCES SEXO(COD_SEXO)
MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE,
COD_CURSO_FK INTEGER REFERENCES CURSO(COD_CURSO)
MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE,

APELIDO VARCHAR(80) NOT NULL
);

INSERT INTO ALUNO(NOME_ALUNO, COD_SEXO_FK, COD_CURSO_FK, APELIDO)
VALUES ('GERMANO', 2, 1, 'MANO');

SELECT * FROM ALUNO;

INSERT INTO ALUNO(NOME_ALUNO, COD_SEXO_FK, COD_CURSO_FK, APELIDO)
VALUES ('TEREZA', 1, 2, 'XUXA');

-- AULA DO DIA 02_02
-- COMANDO PARA ATUALIZAR DADOS DE UMA TABELA

-- CURSO = {COD_CURSO, NOME_CURSO}

UPDATE CURSO SET NOME_CURSO = 'ANÁLISE E DESENVOLVIMENTO DE SISTEMA'
WHERE COD_CURSO = 1;

SELECT * FROM CURSO;


-- ALUNO = {COD_ALUNO, NOME_ALUNO, COD_SEXO_FK, COD_CURSO_FK, APELIDO}

SELECT * FROM ALUNO;
UPDATE ALUNO SET NOME_ALUNO = 'TEREZINHA', APELIDO = 'TER'
WHERE COD_ALUNO = 2;

UPDATE ALUNO SET COD_CURSO_FK = 1
WHERE COD_ALUNO = 2;

-- AULA 08/02/2023

-- CONSULTAS EM BANCO DE DADOS

-- SELECT (DETERMINA QUAIS CAMPOS VOU SELECIONAR)
-- FROM   (QUAIS TABELAS IREI USAR)
-- WHERE  (CONDIÇÕES)

INSERT INTO CURSO (NOME_CURSO) VALUES ('ENGENHARIA CIVIL');

SELECT *
FROM CURSO;

SELECT COD_CURSO, NOME_CURSO
FROM CURSO;

SELECT LOWER(NOME_CURSO)
FROM CURSO;

-- PESQUISA

SELECT *
FROM CURSO WHERE COD_CURSO = 1 OR COD_CURSO = 3;

SELECT *
FROM CURSO WHERE COD_CURSO >= 1 AND COD_CURSO <= 3;

SELECT *
FROM CURSO WHERE NOT (COD_CURSO >= 1 AND COD_CURSO <= 3);

SELECT *
FROM CURSO WHERE NOT (NOME_CURSO = 'ADS');

SELECT *
FROM CURSO WHERE NOME_CURSO LIKE 'A%';

SELECT *
FROM CURSO WHERE NOME_CURSO LIKE '%M';

SELECT *
FROM CURSO WHERE NOME_CURSO LIKE '%RIA%';


-- FUNÇÕES PRIMITIVAS
-- COUNT (CONTAR REGISTROS)

SELECT COUNT(COD_CURSO)
FROM CURSO;


SELECT COUNT(COD_CURSO)
FROM CURSO WHERE NOME_CURSO LIKE 'A%';


-- FUNÇÃO SOMA -- SUM

SELECT SUM(COD_CURSO)
AS TOTAL
FROM CURSO;


-- FUNÇÃO MÉDIA (AVG)

SELECT AVG(COD_CURSO)
AS MEDIA
FROM CURSO;


-- CRIAR FUNÇÃO SOMA/QUANTIDADE


SELECT
(SELECT SUM(COD_CURSO)
AS TOTAL
FROM CURSO )
/
(SELECT COUNT(COD_CURSO)
FROM CURSO);


--MOSTRAR O MAIOR ELEMENTO - MAX

SELECT MAX(COD_CURSO)
FROM CURSO;

SELECT MIN (COD_CURSO)
FROM CURSO;


-- AULA 09/02/2023


SELECT * FROM ALUNO;

SELECT * FROM CURSO;

SELECT * FROM SEXO;

SELECT A.COD_ALUNO, A.NOME_ALUNO, C.NOME_CURSO, S.NOME_SEXO
FROM ALUNO A, CURSO C, SEXO S
WHERE A.COD_CURSO_FK = C.COD_CURSO 
AND A.COD_SEXO_FK = S.COD_SEXO;




































